generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String              @id @default(auto()) @map("_id") @db.ObjectId
  email         String              @unique
  password      String
  firstName     String
  lastName      String
  createdAt     DateTime            @default(now())
  active        Boolean             @default(true)
  organisations OrganisationUser[]
  contactNumber String
}

model Organisation {
  id        String              @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  url       String
  createdAt DateTime            @default(now())
  active    Boolean             @default(true)
  users     OrganisationUser[]
}

model OrganisationUser {
  id             String         @id @default(auto()) @map("_id") @db.ObjectId
  userId         String         @db.ObjectId
  user           User           @relation(fields: [userId], references: [id])
  organisationId String         @db.ObjectId
  organisation   Organisation   @relation(fields: [organisationId], references: [id])
  role           Role[]
  joinedAt       DateTime       @default(now())
  active         Boolean        @default(true)
}

model Subject {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  address     String?
  oib         String?
  phone       String?
  email       String?
  active      Boolean @default(true)
  playgrounds Playground[]
}

model Playground {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  type          PlaygroundType
  address       String?
  location      String?
  description   String?
  contactPerson String?
  subjectId     String  @db.ObjectId
  subject       Subject @relation(fields: [subjectId], references: [id])
  createdAt     DateTime            @default(now())
  active        Boolean @default(true)
}

model Norm {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  createdAt       DateTime            @default(now())
  code            String?
  description     String?
  active          Boolean @default(true)
  nonCompliancesIDs String[] @db.ObjectId
  nonCompliances  NonCompliance[] @relation(fields: [nonCompliancesIDs], references: [id])
}

model NonCompliance {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  normIDs         String[] @db.ObjectId
  norms           Norm[]   @relation(fields: [normIDs], references: [id])
  recommendations String[]
  createdAt       DateTime            @default(now())
  active          Boolean  @default(true)
}

enum Role {
  INSPECTOR
  MANAGER
  ADMIN
}

enum PlaygroundType {
  EQUIPMENT
  SPORT
}
